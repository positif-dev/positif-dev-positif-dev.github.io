{"version":3,"sources":["components/Footer/style.module.scss","pages/Index/style.module.scss","components/Page/style.module.scss","assets/logo.png","components/Card/index.tsx","components/Page/index.tsx","components/Header/index.tsx","components/Footer/index.tsx","pages/Index/index.tsx","pages/NotFound/index.tsx","App.tsx","serviceWorker.ts","index.tsx","components/Card/style.module.scss"],"names":["module","exports","Card","Episode","Max","onClick","window","open","link","className","Style","MaxCard","ImageContainer","alt","Title","src","image","Attribute","title","Description","dangerouslySetInnerHTML","__html","description","Icon","icon","faCalendar","date","Page","props","ClassName","children","pathLink","location","pathname","Header","homeClass","href","Logo","Footer","rel","target","faInstagram","size","faSpotify","faEnvelope","Index","useState","episodeList","setEpisodeList","useEffect","$","root","el","querySelector","fetch","cache","then","resp","text","str","replace","DOMParser","parseFromString","data","querySelectorAll","items","forEach","item","episode","innerHTML","getAttribute","Date","toLocaleDateString","year","month","day","push","length","latestEpisode","restEpisodeList","Left","Right","AllEpisodeTitle","map","index","key","NotFound","App","console","log","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f46cd7da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"style_Footer__34YKk\",\"Icon\":\"style_Icon__UH3Ei\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Index\":\"style_Index__RM-Gw\",\"Left\":\"style_Left__Yp62a\",\"Right\":\"style_Right__2xmdQ\",\"AllEpisodeTitle\":\"style_AllEpisodeTitle__21moV\",\"Parent\":\"style_Parent__2vC_e\",\"Abc\":\"style_Abc__21jgF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Page\":\"style_Page__2xn7s\"};","module.exports = __webpack_public_path__ + \"static/media/logo.79d6ed66.png\";","import React, { FC } from 'react'\nimport Style from './style.module.scss'\nimport { Episode } from '../../types'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCalendar } from '@fortawesome/free-solid-svg-icons'\n\ninterface IProps {\n  Episode: Episode,\n  Max?: boolean\n}\n\nexport const Card: FC<IProps> = ({ Episode, Max }: IProps) => {\n  return (\n    <div\n      onClick={() => { window.open(Episode.link, '_blank') }}\n      className={Max ? Style.MaxCard : Style.Card}>\n      <div className = { Style.ImageContainer }>\n        <img alt={Style.Title} src={Episode.image} />\n      </div> \n      \n\n      <div className={Style.Attribute}>\n        <div className={Style.Title}>\n          { Episode.title }\n        </div>\n\n        <div className={Style.Description}\n          dangerouslySetInnerHTML={{__html: Episode.description}} >\n        </div>\n\n        <div>\n          <div className = { Style.Icon }>\n            <FontAwesomeIcon icon={faCalendar}/>\n          </div>\n          { Episode.date }\n        </div>\n      </div>\n\n    </div>\n  )\n}","import React, { FC } from 'react'\nimport Style from './style.module.scss'\n\ninterface IProps {\n  ClassName?: string\n}\n\nexport const Page: FC<IProps> = (props) => {\n  return (\n    <div className={`${Style.Page} ${props.ClassName || ''}`}>\n      { props.children }\n    </div>\n  )\n}","import React, { FC } from 'react'\nimport './header.scss'\nimport Logo from '../../assets/logo.png'\n\ninterface IProps {\n  ClassName?: string\n}\n\nconst HOME = '/'\n// const EPISODE = '/ep'\n// const BLOG = '/blog'\n// const ABOUT = '/about'\n\nconst pathLink = window.location.pathname\n\nexport const Header: FC<IProps> = (props) => {\n  const baseNavClass = 'nav-link'\n  const activeNavClass = 'nav-link active'\n  const homeClass = pathLink === HOME ? activeNavClass : baseNavClass\n  // const episodeClass = pathLink === EPISODE ? activeNavClass : baseNavClass\n  // const blogClass = pathLink === BLOG ? activeNavClass : baseNavClass\n  // const aboutClass = pathLink === ABOUT ? activeNavClass : baseNavClass\n\n  return (\n    <header>\n      <a\n        href = { HOME }\n        className = 'header-title'>\n        <img src={Logo} className = 'logo' alt='positif.dev logo'/>\n        {/* <p className = 'name'>positif.dev</p> */}\n      </a>\n\n      <ul className = 'nav-list'>\n        <li>\n          <a className = { homeClass } href = { HOME }>Home</a>\n        </li>\n        {/* <li>\n          <a className = { episodeClass } href = { EPISODE }>Episodes</a>\n        </li>\n        <li>\n          <a className = { blogClass } href = { BLOG }>Blog</a>\n        </li>\n        <li>\n          <a className = { aboutClass } href = { ABOUT }>About Us</a>\n        </li> */}\n      </ul>\n    </header>\n  )\n}","import React, { FC } from 'react'\nimport Style from './style.module.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\nimport { faInstagram, faSpotify } from '@fortawesome/free-brands-svg-icons'\n\nexport const Footer: FC<{}> = () => {\n  const iconSize: \"2x\" | \"xs\" | \"lg\" | \"sm\" | \"1x\" | \"3x\" | \"4x\" | \"5x\" | \"6x\" | \"7x\" | \"8x\" | \"9x\" | \"10x\" | undefined = '2x'\n\n  return (\n    <footer className={Style.Footer}>\n      <div>&copy; 2020 positif.dev. All Rights Reserved.</div>\n      \n      <div>\n\n        <a className={Style.Icon} rel=\"noopener noreferrer\" target=\"_blank\"\n          href=\"https://instagram.com/positif.dev\">\n          <FontAwesomeIcon icon={faInstagram} size={iconSize}/>\n        </a>\n\n        <a className={Style.Icon} rel=\"noopener noreferrer\" target=\"_blank\"\n          href=\"https://open.spotify.com/show/6jBnKq2wqFuPoNIzibWVid\" >\n          <FontAwesomeIcon icon={faSpotify} size={iconSize}/>\n        </a>\n\n        <a className={Style.Icon} rel=\"noopener noreferrer\" target=\"_blank\"\n          href=\"mailto:hello@positif.dev\">\n          <FontAwesomeIcon icon={faEnvelope} size={iconSize}/>\n        </a>\n      </div>\n    </footer>\n  )\n}","import React, { FC, useEffect, useState } from 'react'\nimport Style from './style.module.scss'\nimport { Card, Page } from '../../components'\nimport { Episode } from '../../types'\n\nexport const Index: FC<{}> = () => {\n  // state\n  const [episodeList, setEpisodeList] = useState<Episode[]>([])\n\n  // componentDidMount, do not remove [] in the second argument.\n  useEffect(() => {\n    const $  = (root: any, el: string) => root.querySelector(el)\n    const $$ = (root: any, el: string) => root.querySelectorAll(el)\n    const RSS_URL = 'https://anchor.fm/s/2a147024/podcast/rss'\n    // fetching from RSS_URL\n    fetch(RSS_URL, { cache: 'force-cache' })\n      .then(resp => resp.text())\n      .then(str => str.replace(/<!\\[CDATA\\[|\\]\\]>/g, ''))\n      .then(str => str.replace(/itunes:image/g, \"itunes_image\"))\n      .then(str => new DOMParser().parseFromString(str, \"text/xml\"))\n      .then(data => $$(data, 'item'))\n      .then(items => {\n        items.forEach((item: any) => {\n          const title: string = $(item, 'title').innerHTML\n          const link: string = $(item, 'link').innerHTML\n          const description: string = $(item, 'description').innerHTML\n          const image: string = $(item, 'itunes_image').getAttribute('href')\n          const date: Date = new Date($(item, 'pubDate').innerHTML)\n          const formattedDate: string = date.toLocaleDateString('en-US', {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n          })\n\n          const episode: Episode = {\n            title: title,\n            link: link,\n            description: description,\n            image: image,\n            date: formattedDate\n          }\n          \n          episodeList.push(episode)\n\n          setEpisodeList([\n            ...episodeList\n          ])\n        })\n      })\n\n  // eslint-disable-next-line\n  }, [])\n\n  // early return should be better-rendered\n  if ( episodeList.length === 0 ) {\n    return <div>Loading...</div>\n  }\n\n  const [ latestEpisode, ...restEpisodeList ] = episodeList\n\n  // true return\n  return (\n      <Page ClassName = { Style.Index }>\n        <div className={Style.Left}>\n          <h1>Latest Episode</h1>\n          <Card Episode={latestEpisode} Max/>\n        </div>\n\n        <div className={Style.Right}>\n          <h1 className={Style.AllEpisodeTitle}>All Episode</h1>\n          {\n            restEpisodeList.map((episode: Episode, index: number) => {\n              return <Card key={index} Episode={episode}/>\n            })\n          }\n        </div>\n      </Page>\n  )\n}\n","import React from 'react';\n\nexport function NotFound() {\n  return (\n    <div>\n      404\n    </div>\n  );\n}","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { Header, Footer } from './components'\nimport { Index, NotFound } from './pages'\n\nexport const App: React.FC<{}> = () => {\n  console.log('logo by:', 'jessicajimantoro@gmail.com')\n  console.log('content by:', ' devinryanriota@gmail.com, me@clavinjune.dev')\n\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route exact path='/'>\n          <Index />\n        </Route>\n        <Route path='*'>\n          <NotFound />\n        </Route>\n      </Switch>\n      <Footer />\n    </Router>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport './index.scss'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"style_Card__33WkM\",\"MaxCard\":\"style_MaxCard__3IIeb\",\"ImageContainer\":\"style_ImageContainer__2_y81\",\"Title\":\"style_Title__3aMqF\",\"Description\":\"style_Description__3Pj74\",\"Icon\":\"style_Icon__2PPcq\",\"Attribute\":\"style_Attribute__26u0h\"};"],"sourceRoot":""}